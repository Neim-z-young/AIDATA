# Generated by Django 2.1.7 on 2019-03-20 11:38

import datacollect.customUser
import datacollect.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppUniqueUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(blank=True, error_messages={}, help_text='网站用户名,最好不要包括奇奇怪怪的文字', max_length=150, null=True, verbose_name='app用户名, 可重名')),
                ('email', models.EmailField(blank=True, error_messages={'unique': '当前邮件已被注册,请更换邮件或找回密码'}, max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('creat_datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='账号创建日期时间')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='网站员工')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Web管理员')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='账号状态')),
                ('wechat_open_id', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='微信openid')),
                ('last_login_datetime', models.DateTimeField(blank=True, null=True, verbose_name='app用户上次登录日期时间')),
            ],
            options={
                'verbose_name': '普通用户',
            },
            managers=[
                ('objects', datacollect.customUser.AppCustomUserWithWechatManager()),
            ],
        ),
        migrations.CreateModel(
            name='DataSubmitAndCheck',
            fields=[
                ('data_inc_id', models.AutoField(primary_key=True, serialize=False, verbose_name='数据自增id')),
                ('temp_data_file', models.FileField(upload_to=datacollect.models.user_directory_path, verbose_name='数据在服务器中的暂存路径,包括数据名，由用户提交时确定')),
                ('data_description', models.CharField(blank=True, max_length=50, null=True, verbose_name='用户数据描述')),
                ('data_submit_datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='数据提交日期时间')),
                ('data_check_state', models.CharField(blank=True, max_length=10, null=True, verbose_name='数据审核状态，可以为“通过”、“未通过”、“待审核”等等')),
                ('data_check_description', models.CharField(blank=True, max_length=30, null=True, verbose_name='数据审核描述，如对未通过数据的原因说明')),
                ('data_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='数据所有者')),
            ],
            options={
                'verbose_name': '数据提交并审核',
            },
        ),
        migrations.CreateModel(
            name='DataTwolType',
            fields=[
                ('data_2ltype_id', models.AutoField(primary_key=True, serialize=False, verbose_name='自增ID')),
                ('data_2ltype_name', models.CharField(max_length=20, verbose_name='二级数据类型名')),
                ('data_2ltype_description', models.CharField(blank=True, max_length=40, null=True, verbose_name='二级数据类型描述')),
                ('data_2ltype_add_datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='二级数据类型添加日期时间')),
            ],
            options={
                'verbose_name': '数据二级类型',
            },
        ),
        migrations.CreateModel(
            name='DataType',
            fields=[
                ('data_type_id', models.AutoField(primary_key=True, serialize=False, verbose_name='自增ID')),
                ('data_type_name', models.CharField(max_length=10, unique=True, verbose_name='数据类型名，如“image”、“voice”')),
                ('data_type_description', models.CharField(blank=True, max_length=30, null=True, verbose_name='数据类型描述')),
                ('data_type_add_datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='数据类型添加日期时间')),
                ('data_type_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='数据类型创建者')),
            ],
            options={
                'verbose_name': '数据一级类型',
            },
        ),
        migrations.CreateModel(
            name='PictureSubmitted',
            fields=[
                ('data_id', models.AutoField(primary_key=True, serialize=False, verbose_name='图片在数据库中的自增ID')),
                ('data_image_file', models.FileField(upload_to=datacollect.models.user_directory_path, verbose_name='图片路径，由开头定义的变量确定,包括图片名')),
                ('data_description', models.CharField(blank=True, max_length=50, null=True, verbose_name='图片描述')),
                ('data_submit_datetime', models.DateTimeField(blank=True, null=True, verbose_name='图片提交日期时间')),
                ('data_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='数据所有者')),
            ],
            options={
                'verbose_name': '已提交的图片存放表',
            },
        ),
        migrations.CreateModel(
            name='TaskRelease',
            fields=[
                ('task_inc_id', models.AutoField(primary_key=True, serialize=False, verbose_name='任务id')),
                ('task_tag', models.CharField(max_length=20, verbose_name='任务标签')),
                ('task_description', models.CharField(blank=True, max_length=50, null=True, verbose_name='任务具体内容描述')),
                ('task_data_num', models.PositiveIntegerField(default=20, verbose_name='任务所需数据量')),
                ('task_credits', models.PositiveIntegerField(default=30, verbose_name='任务积分')),
                ('task_deadline', models.DateTimeField(default=datetime.datetime(2019, 3, 21, 11, 38, 53, 825913), verbose_name='任务时限')),
                ('task_create_datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='任务创建日期时间')),
                ('task_finish_state', models.CharField(blank=True, max_length=10, null=True, verbose_name='任务完成状态')),
                ('task_onelevel_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datacollect.DataType', verbose_name='任务所需数据的一级类型')),
                ('task_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='任务创建者')),
                ('task_twolevel_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datacollect.DataTwolType', verbose_name='任务所需数据的二级类型')),
            ],
            options={
                'verbose_name': '任务发布表',
            },
        ),
        migrations.AddField(
            model_name='picturesubmitted',
            name='data_task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datacollect.TaskRelease', verbose_name='数据所属任务id'),
        ),
        migrations.AddField(
            model_name='datatwoltype',
            name='belongto_data_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datacollect.DataType', verbose_name='二级数据类型所属一级数据类型'),
        ),
        migrations.AddField(
            model_name='datatwoltype',
            name='data_2ltype_owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='二级类型创建者'),
        ),
        migrations.AddField(
            model_name='datasubmitandcheck',
            name='data_task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datacollect.TaskRelease', verbose_name='数据所属任务'),
        ),
        migrations.AddField(
            model_name='appuniqueuser',
            name='tasks_accepted',
            field=models.ManyToManyField(db_table='users_tasks_accepted', to='datacollect.TaskRelease', verbose_name='app用户领取的任务集合'),
        ),
    ]
